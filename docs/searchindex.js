Search.setIndex({"alltitles": {"AAG-project\u2019s Documentation": [[3, "aag-project-s-documentation"]], "Contents:": [[3, null]], "Customer clustering": [[0, "customer-clustering"]], "Customer predictions": [[1, "customer-predictions"]], "Helpers": [[2, "helpers"]], "Indices and tables": [[3, "indices-and-tables"]], "Main entry point": [[4, "main-entry-point"]], "Preprocessing": [[5, "preprocessing"]], "Usage:": [[3, "usage"]]}, "docnames": ["customerClustering", "customerPredictions", "helpers", "index", "main", "preprocessing"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["customerClustering.rst", "customerPredictions.rst", "helpers.rst", "index.rst", "main.rst", "preprocessing.rst"], "indexentries": {"addfeatures() (in module preprocessing)": [[5, "preprocessing.addFeatures", false]], "blendpostalcodes() (in module preprocessing)": [[5, "preprocessing.blendPostalCodes", false]], "clusterrfm() (in module customerclustering)": [[0, "customerClustering.clusterRFM", false]], "convertdatatoparquet() (in module helpers)": [[2, "helpers.convertDataToParquet", false]], "customerclustering": [[0, "module-customerClustering", false]], "customerprediction() (in module main)": [[4, "main.customerPrediction", false]], "customerpredictions": [[1, "module-customerPredictions", false]], "fillmissingstates() (in module helpers)": [[2, "helpers.fillMissingStates", false]], "finalcleaning() (in module preprocessing)": [[5, "preprocessing.finalCleaning", false]], "findneareststate() (in module helpers)": [[2, "helpers.findNearestState", false]], "getclosestmatch() (in module helpers)": [[2, "helpers.getClosestMatch", false]], "gettop25percentcustomers() (in module customerclustering)": [[0, "customerClustering.getTop25PercentCustomers", false]], "helpers": [[2, "module-helpers", false]], "initialcleaning() (in module preprocessing)": [[5, "preprocessing.initialCleaning", false]], "loadinitialdata() (in module helpers)": [[2, "helpers.loadInitialData", false]], "loadparquetfile() (in module helpers)": [[2, "helpers.loadParquetFile", false]], "main": [[4, "module-main", false]], "main() (in module main)": [[4, "main.main", false]], "mergeonkunden() (in module preprocessing)": [[5, "preprocessing.mergeOnKunden", false]], "module": [[0, "module-customerClustering", false], [1, "module-customerPredictions", false], [2, "module-helpers", false], [4, "module-main", false], [5, "module-preprocessing", false]], "predictrevenuepercluster() (in module customerpredictions)": [[1, "customerPredictions.predictRevenuePerCluster", false]], "preprocessdata() (in module main)": [[4, "main.preprocessData", false]], "preprocessing": [[5, "module-preprocessing", false]]}, "objects": {"": [[0, 0, 0, "-", "customerClustering"], [1, 0, 0, "-", "customerPredictions"], [2, 0, 0, "-", "helpers"], [4, 0, 0, "-", "main"], [5, 0, 0, "-", "preprocessing"]], "customerClustering": [[0, 1, 1, "", "clusterRFM"], [0, 1, 1, "", "getTop25PercentCustomers"]], "customerPredictions": [[1, 1, 1, "", "predictRevenuePerCluster"]], "helpers": [[2, 1, 1, "", "convertDataToParquet"], [2, 1, 1, "", "fillMissingStates"], [2, 1, 1, "", "findNearestState"], [2, 1, 1, "", "getClosestMatch"], [2, 1, 1, "", "loadInitialData"], [2, 1, 1, "", "loadParquetFile"]], "main": [[4, 1, 1, "", "customerPrediction"], [4, 1, 1, "", "main"], [4, 1, 1, "", "preprocessData"]], "preprocessing": [[5, 1, 1, "", "addFeatures"], [5, 1, 1, "", "blendPostalCodes"], [5, 1, 1, "", "finalCleaning"], [5, 1, 1, "", "initialCleaning"], [5, 1, 1, "", "mergeOnKunden"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:function"}, "terms": {"1": 1, "10": 0, "2": 1, "25": 0, "3": 0, "52": 1, "6": [], "A": [1, 2], "By": 2, "For": 1, "In": 4, "The": [0, 1, 2, 4, 5], "Then": 0, "aag": [2, 5], "abstract": 2, "ad": 5, "add": [3, 5], "addfeatur": [3, 5], "algorithm": [0, 1], "allord": 1, "approach": 1, "ar": [0, 1, 2, 4], "architectur": 1, "arima": 1, "assign": [0, 1], "base": [0, 1, 2], "basi": 1, "basic": 5, "behavior": 0, "between": 0, "blend": 5, "blendpostalcod": [3, 5], "call": 4, "choic": 1, "citi": 2, "clean": [3, 4, 5], "cleaner": 2, "closest": 2, "cluster": [1, 3], "clustered_customers_df": 1, "clusterid": 1, "clusterrfm": [0, 1, 3], "code": 2, "column": [0, 1, 5], "complet": [0, 1], "conda": 3, "contain": [1, 2, 5], "convert": [2, 4, 5], "convertdatatoparquet": [2, 3], "correct": 5, "creat": [0, 1, 3], "csv": 4, "custom": [3, 4], "customerclust": 0, "customerid": [0, 1], "customerpredict": [1, 3, 4], "data": [1, 2, 3, 4, 5], "datafram": [0, 1, 2, 4, 5], "dataset": [0, 1], "datetim": 5, "default": 1, "defin": 4, "design": 1, "determin": 0, "df": [0, 2, 4, 5], "df_kunden": 5, "df_rechnung": 5, "dict": 2, "dictionari": 2, "done": [0, 1], "drop": 5, "dropout": 1, "e": 1, "each": 1, "easier": 2, "either": 1, "entri": 3, "environ": 3, "extern": 5, "extra": 5, "featur": [0, 5], "file": [2, 3, 4, 5], "fill": [2, 5], "fillmissingst": [2, 3], "filter": 5, "final": [3, 4, 5], "finalclean": [3, 5], "find": 2, "findnearestst": [2, 3], "fit": 1, "folder": 3, "from": [0, 1, 2, 4], "full": 4, "function": [1, 2, 4], "futur": 1, "fuzzi": 2, "getclosestmatch": [2, 3], "gettop25percentcustom": [0, 3], "given": 2, "ha": 3, "helper": 3, "here": 4, "histor": 1, "histori": [0, 1], "http": 5, "huber": 1, "i": [0, 1, 2, 3, 4], "id": 0, "includ": [0, 1, 2, 4, 5], "inconsist": 5, "index": 3, "initi": [2, 3, 4, 5], "initialclean": [3, 5], "insid": 3, "int": [1, 2], "kei": 2, "kmean": 0, "kunde_verkauf_sk": 5, "kunden": [2, 4, 5], "kunden_path": [2, 4], "layer": 1, "learn": [0, 1], "librari": [0, 1], "list": 2, "load": [2, 5], "loadinitialdata": [2, 3], "loadparquetfil": [2, 3], "logic": 5, "loss": 1, "lstm": 1, "main": [3, 5], "match": 2, "merg": 5, "mergeonkunden": [3, 5], "miss": [2, 5], "model": 1, "modeltyp": 1, "modul": 3, "month": [], "most": 0, "mse": 1, "n": 1, "name": 2, "nearest": 2, "necessari": [0, 1], "net": 1, "netrevenu": [0, 1], "new": 5, "next": [1, 3], "nn": 1, "nomi": [4, 5], "none": 2, "number": [0, 1], "optim": 0, "order": 0, "orderd": [0, 1, 5], "ordernumb": 0, "orders_top25": 0, "org": 5, "origin": 1, "other": 2, "output": 1, "overal": 2, "page": 3, "panda": 2, "paramet": [0, 1, 2, 4, 5], "parquet": [2, 3, 4, 5], "part": [0, 1, 3], "path": [2, 4, 5], "pd": [0, 1, 2, 4, 5], "per": [0, 1], "percent": 0, "pipelin": [0, 1, 2, 3, 4], "plz_path": 5, "point": 3, "possibl": 2, "postal": 2, "postal_cod": 2, "postal_code_to_c": 2, "postalcod": [2, 5], "postleitzahl": 5, "predict": [3, 4], "predictiontyp": 1, "predictrevenueperclust": [1, 3], "predweek": 1, "preprocess": [0, 1, 3], "preprocessdata": [3, 4], "process": [2, 5], "provid": [3, 5], "purchas": [0, 1], "py": [2, 5], "randomforestregressor": 1, "re": 2, "read": 2, "rechnung_path": [2, 4], "rechnungen": [2, 5], "rechnungen_new": 4, "renam": 5, "respect": 1, "respons": [0, 1], "result": 5, "return": [0, 1, 2, 4, 5], "revenu": 1, "rfm": 0, "row": [2, 5], "run": [3, 4], "save": [2, 4, 5], "scikit": [0, 1], "score": 0, "search": 3, "season": 5, "sequenti": 1, "seri": 2, "set": 1, "share": 0, "silhouett": 0, "sourc": 5, "specif": 1, "state": [2, 5], "str": [1, 2, 4, 5], "subset": 0, "suche": 5, "take": [0, 1], "test": 1, "thi": [0, 1, 2, 3, 4, 5], "top": 0, "top25": 0, "total": 0, "train": 1, "tupl": 2, "type": [0, 1, 2, 4, 5], "unnecessari": 5, "us": [0, 1, 2, 3], "user": 0, "util": 2, "valu": [1, 2, 5], "valuabl": 0, "week": 1, "weekli": 1, "www": 5, "year": 1}, "titles": ["Customer clustering", "Customer predictions", "Helpers", "AAG-project\u2019s Documentation", "Main entry point", "Preprocessing"], "titleterms": {"": 3, "aag": 3, "cluster": 0, "content": 3, "custom": [0, 1], "document": 3, "entri": 4, "helper": 2, "indic": 3, "main": 4, "point": 4, "predict": 1, "preprocess": 5, "project": 3, "tabl": 3, "usag": 3, "welcom": []}})